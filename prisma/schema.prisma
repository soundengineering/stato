generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Artists {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Relations
  tracks    TrackArtist[]
  albums    Albums[]
  @@index([name])
}

model Albums {
  id        Int      @id @default(autoincrement())
  name      String
  artistId  Int
  imageUrl  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Relations
  artist    Artists  @relation(fields: [artistId], references: [id])
  tracks    Tracks[]
  @@index([name])
  @@unique([name, artistId], name: "name_artistId")
}

model Tracks {
  ISRC      String   @id     // Primary key
  title     String
  length    Int?
  albumId   Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Relations
  album    Albums?   @relation(fields: [albumId], references: [id])
  artists  TrackArtist[]
  plays    Plays[]
  @@index([title])
}

model TrackArtist {
  trackISRC  String
  artistId   Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  
  // Relations
  track    Tracks  @relation(fields: [trackISRC], references: [ISRC])
  artist   Artists @relation(fields: [artistId], references: [id])

  @@id([trackISRC, artistId])
}

model Plays {
  id        Int      @id @default(autoincrement())
  trackISRC String   
  userId    String
  channelId String
  listeners Int      @default(0)
  playedAt  DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  dopes     String[] @default([])
  nopes     String[] @default([])
  bookmarks String[] @default([])
  boofs     String[] @default([])
  score     Int      @default(0)
  
  // Relations
  track    Tracks    @relation(fields: [trackISRC], references: [ISRC])
  @@index([playedAt])
  @@index([userId])
  @@index([channelId])
  @@unique([trackISRC, userId, channelId, playedAt], name: "unique_play")
}
